using Archigen;
using System;
using System.Collections.Generic;
using System.Text;

namespace Syllabore
{
    /// <summary>
    /// A pool of generators that randomly selects one to generate a value.
    /// </summary>
    public class GeneratorPool<T> : IGenerator<T>
    {
        /// <summary>
        /// A selector used to randomly choose a generator.
        /// </summary>
        public RandomSelector<IGenerator<T>> Selector { get; set; }

        /// <summary>
        /// Initializes an empty pool.
        /// </summary>
        public GeneratorPool()
        {
            this.Selector = new RandomSelector<IGenerator<T>>();
        }

        /// <summary>
        /// Adds a generator to the pool.
        /// </summary>
        public GeneratorPool<T> Add(IGenerator<T> generator)
        {
            this.Selector.Add(generator);
            return this;
        }

        /// <summary>
        /// Selects a random generator from the pool then returns
        /// a value generated by that generator.
        /// </summary>
        public T Next()
        {
            if (this.Selector.Values.Count == 0)
            {
                throw new InvalidOperationException("No generators available in the pool.");
            }

            var generator = Selector.Next();
            return generator.Next();
        }
    }
}
