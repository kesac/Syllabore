using Archigen;
using System;
using System.Collections.Generic;

namespace Syllabore.Example
{
    /// <summary>
    /// A pool of string generators that can be used
    /// collectively wherever a single <see cref="IGenerator{string}"/>
    /// is used.
    /// </summary>
    public class StringGeneratorPool : IGenerator<string>
    {
        /// <summary>
        /// Used to simulate randomness when selecting a generator.
        /// </summary>
        public Random Random { get; set; }

        /// <summary>
        /// The generators available in the pool.
        /// </summary>
        public List<IGenerator<string>> Generators;

        /// <summary>
        /// Initializes an empty pool;
        /// </summary>
        public StringGeneratorPool()
        {
            this.Random = new Random();
            this.Generators = new List<IGenerator<string>>();
        }

        /// <summary>
        /// Adds a generator to the pool.
        /// </summary>
        public StringGeneratorPool Add(IGenerator<string> generator)
        {
            Generators.Add(generator);
            return this;
        }

        /// <summary>
        /// Selects a random generator from the pool then returns
        /// a string generated by that generator.
        /// </summary>
        public string Next()
        {
            if (Generators.Count == 0)
            {
                throw new InvalidOperationException("No generators available in the pool.");
            }

            int index = Random.Next(Generators.Count);
            return Generators[index].Next();
        }
    }
}
